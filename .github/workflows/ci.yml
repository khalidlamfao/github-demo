name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and build frontend
        working-directory: ./client
        run: |
          npm install
          npm run build

      - name: Build backend Docker image
        working-directory: ./server
        run: |
          docker build -t my-backend .
      
      - name: Build frontend Docker image
        working-directory: ./client
        run: |
          docker build -t my-frontend .

      - name: Run Trivy scan on backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-backend
          format: table
          severity: CRITICAL,HIGH

      - name: Run Trivy scan on frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-frontend
          format: table
          severity: CRITICAL,HIGH

  deploy:
    needs: build-and-scan
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.0"

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

